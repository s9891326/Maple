name: Django CI

on:
  push:
    branches: [ feature.master.test_github_ci ]
  pull_request:
    branches: [ master ]

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      DEBUG: False
      DB_NAME: test_maple
      DB_USER: dbuser
      DB_PASSWORD: riu405405
      ROOT_PASSWORD: 123456
#    strategy:
#      max-parallel: 4
#      matrix:
#        python-version: [3.7]
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ env.DB_NAME }}
          MYSQL_USER: ${{ env.DB_USER }}
          MYSQL_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Add test Database
        run: |
          mysql -uroot -h127.0.0.1 -p'${{ env.ROOT_PASSWORD }}' -e "
          CREATE DATABASE IF NOT EXISTS ${{ env.DB_NAME }};
          CREATE USER ${{ env.DB_USER }}@'localhost' IDENTIFIED BY '${{ env.DB_PASSWORD }}';
          select host, user from mysql.user;
          GRANT ALL PRIVILEGES ON ${{ env.DB_NAME }}.* TO ${{ env.DB_USER }}@'localhost';
          SELECT NOW();
          "
      - name: Run migrate
        run: python manage.py migrate
        env:
          DEBUG: ${{ env.DEBUG }}
      - name: Run Tests
        run: python manage.py test --noinput
        env:
          DEBUG: ${{ env.DEBUG }}

