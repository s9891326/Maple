name: Django CI

on:
  push:
    branches: [ feature.master.fix_product_maple_capability_column ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DEBUG: False
      DB_NAME: test_maple
      DB_USER: dbuser
      DB_PASSWORD: riu405405
      ROOT_PASSWORD: 123456
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ env.DB_NAME }}
          MYSQL_USER: ${{ env.DB_USER }}
          MYSQL_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Add test Database
      run: |
        mysql -uroot -h127.0.0.1 -p'${{ env.ROOT_PASSWORD }}' -e "CREATE DATABASE IF NOT EXISTS ${{ env.DB_NAME }};"
        mysql -uroot -h127.0.0.1 -p'${{ env.ROOT_PASSWORD }}' -e "GRANT ALL PRIVILEGES ON ${{ env.DB_NAME }}.* TO ${{ env.dbuser }}@`%` IDENTIFIED BY ${{ env.DB_PASSWORD }};"
    - name: Run migrations
      run: python manage.py migrate
      env:
        DEBUG: ${{ env.DEBUG }}
    - name: Run Tests
      run: python manage.py test --noinput
      env:
        DEBUG: ${{ env.DEBUG }}

